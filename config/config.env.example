# Database Migration Toolkit Configuration
# Copy this file to config.env and update with your actual credentials and settings

# ==============================================
# REMOTE DATABASE CONFIGURATION (Source)
# ==============================================
# The remote database you want to sync FROM
REMOTE_HOST="your-remote-database-host.com"
REMOTE_PORT="3306"
REMOTE_USER="your-remote-username"
REMOTE_PASS="your-remote-password"

# ==============================================
# LOCAL DATABASE CONFIGURATION (Target)  
# ==============================================
# Your local MySQL database credentials
LOCAL_USER="root"
LOCAL_PASS="your-local-mysql-password"
LOCAL_HOST="localhost"
LOCAL_PORT="3306"

# ==============================================
# DATABASE SYNCHRONIZATION SETTINGS
# ==============================================
# Databases to sync (comma-separated list)
# Used by sync_databases.sh and multi_thread_sync.sh
SYNC_DATABASES="database1,database2,database3"

# Example configurations:
# SYNC_DATABASES="user_db,product_db,order_db"
# SYNC_DATABASES="production_app,analytics_db"
# SYNC_DATABASES="single_database"

# ==============================================
# TABLE SYNCHRONIZATION CONFIGURATION
# ==============================================
# Table sync specifications (pipe-separated entries)
# Format: "source_db:target_db:tables" or "source_db:tables" (auto-target)
# Use "*" for all tables, or "table1,table2,table3" for specific tables

TABLE_SYNC_CONFIG="remote_db_one:local_db_one:*|remote_db_two:local_db_two:table1,table2,table3"

# Example configurations:
# TABLE_SYNC_CONFIG="user_db:local_users:*|product_db:local_products:products,categories"
# TABLE_SYNC_CONFIG="main_db:dev_main:users,orders,products|analytics_db:dev_analytics:*"
# TABLE_SYNC_CONFIG="blog_db:test_blog:posts,comments,tags"

# Alternative format for complex configurations (will override TABLE_SYNC_CONFIG if set)
# Use this for multi-line configurations that are easier to read
# TABLE_SYNC_CONFIG_MULTILINE="
# production_app:dev_app:users,orders,products
# analytics_db:dev_analytics:*
# billing_db:dev_billing:invoices,payments,subscriptions
# logs_db:dev_logs:error_logs,access_logs
# "

# ==============================================
# PERFORMANCE AND THREADING SETTINGS
# ==============================================
# Maximum number of concurrent threads (adjust based on your system resources)
# Recommended: 2-4 for most systems, 6-8 for high-performance systems
MAX_THREADS=4

# Retry configuration for failed operations
MAX_RETRY_ATTEMPTS=3
RETRY_DELAY=10

# MySQL connection timeout settings (in seconds)
MYSQL_CONNECT_TIMEOUT=60
MYSQL_READ_TIMEOUT=300

# ==============================================
# BACKUP AND STORAGE SETTINGS
# ==============================================
# Local database prefix (optional)
# Example: If set to "local_", databases will be created as "local_original_name"
LOCAL_DB_PREFIX=""

# Whether to drop existing tables before importing (true/false)
# Set to "false" if you want to append data instead of replacing
DROP_EXISTING_TABLE="true"

# Backup retention policy (days)
BACKUP_RETENTION_DAYS=7

# Backup directory (relative to project root)
BACKUP_DIR="data/backups"

# ==============================================
# MONITORING AND LOGGING SETTINGS
# ==============================================
# Log level (DEBUG, INFO, WARN, ERROR)
LOG_LEVEL="INFO"

# Monitoring refresh interval (seconds)
MONITOR_REFRESH_INTERVAL=2

# Progress reporting interval (seconds)
PROGRESS_REPORT_INTERVAL=5

# ==============================================
# MYSQLDUMP OPTIONS
# ==============================================
# Additional mysqldump options for database sync
MYSQLDUMP_OPTIONS="--set-gtid-purged=OFF --skip-add-locks --skip-lock-tables --single-transaction --routines --triggers"

# Additional mysqldump options for table sync
MYSQLDUMP_TABLE_OPTIONS="--set-gtid-purged=OFF --skip-add-locks --skip-lock-tables --skip-triggers --skip-opt --single-transaction --add-drop-table --create-options --extended-insert --quick --lock-tables=false"

# ==============================================
# IMPORT FROM BACKUPS SETTINGS
# ==============================================
# Local database prefix for backup imports
IMPORT_LOCAL_DB_PREFIX="imported_"

# Source backup directory for imports
IMPORT_BACKUP_DIR="./backups"

# ==============================================
# DOCKER ENVIRONMENT VARIABLES
# ==============================================
# These can be overridden by Docker environment variables
# when running in containers

# Container-specific settings
CONTAINER_MODE="false"
CONTAINER_WORKDIR="/app"

# ==============================================
# ADVANCED SETTINGS (Optional)
# ==============================================
# Enable debug mode (true/false)
DEBUG_MODE="false"

# Parallel table processing for single database
PARALLEL_TABLES="false"

# Custom SQL mode for imports
SQL_MODE="TRADITIONAL"

# Character set for database operations
CHARSET="utf8mb4"

# Collation for database operations  
COLLATION="utf8mb4_unicode_ci"

# ==============================================
# NOTIFICATION SETTINGS (Optional)
# ==============================================
# Email notifications (requires mail command)
ENABLE_EMAIL_NOTIFICATIONS="false"
EMAIL_TO="admin@company.com"
EMAIL_FROM="dbsync@company.com"

# Webhook notifications
ENABLE_WEBHOOK_NOTIFICATIONS="false"
WEBHOOK_URL="https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# ==============================================
# EXAMPLES OF TYPICAL CONFIGURATIONS
# ==============================================

# Example 1: Development Environment
# SYNC_DATABASES="app_db,user_db"
# TABLE_SYNC_CONFIG="production_app:dev_app:users,products|logs_db:dev_logs:error_logs"
# MAX_THREADS=2
# LOCAL_DB_PREFIX="dev_"

# Example 2: Staging Environment  
# SYNC_DATABASES="main_app,analytics,billing"
# TABLE_SYNC_CONFIG="production_main:staging_main:*|analytics_prod:staging_analytics:*"
# MAX_THREADS=6
# LOCAL_DB_PREFIX="staging_"

# Example 3: Data Migration Project
# SYNC_DATABASES="legacy_system"
# TABLE_SYNC_CONFIG="legacy_db:modern_db:customers,orders,products|legacy_logs:modern_logs:*"
# MAX_THREADS=4
# DROP_EXISTING_TABLE="false"

# Example 4: Disaster Recovery
# SYNC_DATABASES="critical_db,user_data,financial_records"
# MAX_THREADS=8
# MAX_RETRY_ATTEMPTS=5
# RETRY_DELAY=30

# ==============================================
# CONFIGURATION VALIDATION
# ==============================================
# Set to true to enable configuration validation on startup
VALIDATE_CONFIG="true"

# Set to true to test database connections before starting sync
TEST_CONNECTIONS="true"

# ==============================================
# SECURITY NOTES
# ==============================================
# 1. This file contains sensitive information - keep it secure
# 2. Add config.env to .gitignore to prevent accidental commits
# 3. Use strong passwords for database connections
# 4. Consider using MySQL SSL connections for remote databases
# 5. Limit database user privileges to only required operations
# 6. Regularly rotate database passwords
# 7. Use environment variables in production for additional security